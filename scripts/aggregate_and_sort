#!/bin/bash

# Handle command line args
if [[ -z $1 || -z $2 || -z $3 ]]
then
    echo "ERROR: no grouping IP specified."
    echo "Usage: ./aggregate_and_sort <input path> <output path> <src/dst>"
    echo "ARGS:"
    echo "  input path:  path to the ctu13 dataset"
    echo "  output path: path to the desired output directory"
    echo "  src/dst:     whether to group by source or destination IP addresses"
    exit
fi

data_path=$(echo "$1" | tr -d '/')
output_path=$(echo "$2" | tr -d '/')
# Grouping is the index key to group on when we sort the aggregated file
grouping=2
if [ "$3" = "dst" ]
then
    grouping=3
fi

if [ ! -d $output_path ];
then
    mkdir -p $output_path
fi

agg_file="$output_path/aggregate.txt"
sort_file="$output_path/sorted_aggregate.txt"
benign_file="$output_path/sorted_benign_traffic.txt"
bot_file="$output_path/sorted_bot_traffic.txt"

if [ -f $agg_file ]
then
    rm $agg_file
fi

# Aggregate all data into a single text file
for file in $(find $data_path -name merged.txt)
do
    cat $file >> $agg_file
done

if [ ! -f $agg_file ]
then
    echo "ERROR: No merged data files found."
    echo "Did you run the merging vast and features pipeline?"
    exit
fi

# Group by IP address and then sort the groupings by time stamp
sort -t ',' -k $grouping,$grouping -k 1,1 -s $agg_file > $sort_file

# Put the bot and benign traffic into separate files
awk -F ',' '{ if ($4==0) {print $0}}' $sort_file > $benign_file
awk -F ',' '{ if ($4==1) {print $0}}' $sort_file > $bot_file
